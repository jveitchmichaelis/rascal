# data
peaks: ~
peaks_effective: ~
spectrum: ~

# calibrator_properties
num_pix: ~
effective_pixel: ~
plotting_library: 'matplotlib'
seed: ~
logger_name: ~
log_level: 'info'
hide_progress: false

candidate_tolerance: 10.0
constrain_poly: false

# If None, will use the atlas properties below
# Otherwise it will be treated as a path to the atlas.yaml and read the
# properties from that file to generate an Atlas object
atlas:
  config: True
  # ignored if config file is given
  # linelist can be "nist" or "user"
  linelist: "nist"
  # used by both
  vacuum: False
  pressure: 101325.0
  temperature: 273.15
  relative_humidity: 0.0
  # used in "nist" mode only
  elements: ['Xe']
  min_atlas_wavelength: 3000.0
  max_atlas_wavelength: 5000.0
  min_intensity: 10.0
  min_distance: 10.0
  brightest_n_lines: 100
  # used in "user" mode only
  element_list: ~
  wavelength_list: ~
  intensity_list: ~

# properties to generate a hough_transform object
hough_transform:
  num_slopes: 2000
  xbins: 100
  ybins: 100
  min_wavelength: 3000.0
  max_wavelength: 9000.0
  range_tolerance: 500
  linearity_tolerance: 100

# ransac_properties
ransac:
  sample_size: 5
  top_n_candidate: 5
  linear: true
  filter_close: false
  ransac_tolerance: 5
  candidate_weighted: true
  hough_weight: 1.0
  minimum_matches: 3
  sampler: 'probabilistic'
  minimum_peak_utilisation: 0.0
  minimum_fit_error: 1.0e-4

# results
results:
  matched_peaks: []
  matched_atlas: []
  fit_coeff: ~

